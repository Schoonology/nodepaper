#!/usr/bin/env node
var http = require('http')
  , path = require('path')
  , debug = require('debug')('nodepaper:bin')
  , express = require('express')
  , rc = require('rc')('nodepaper', require('../config'))
  , nodefn = require('when/node/function')
  , Renderer = require('../lib/renderer')
  , app = express()
  , server = http.createServer(app)
  , renderer = new Renderer(rc)
  , REQUIRED_FIELDS = ['port', 'postdir', 'theme']
  , reqsMet = true

// Paas support
if (process.env.PORT) {
  rc.port = process.env.PORT
}

debug('Configuration: %s', JSON.stringify(rc, null, 2))

REQUIRED_FIELDS.forEach(function (field) {
  if (!rc[field]) {
    console.error('Missing required field:', field)
    reqsMet = false
  }
})

if (!reqsMet) {
  process.exit(2)
}

app.get('/', function (req, res, next) {
  renderer
    .index()
    .then(function (html) {
      res.send(html)
    }, function (err) {
      next(err)
    })
})

app.use('/theme', express.static(path.resolve(process.cwd(), rc.assetdir)))

app.get('/:name', function (req, res, next) {
  renderer
    .single(req.params.name)
    .then(function (html) {
      res.send(html)
    }, function (err) {
      next(err)
    })
})

renderer
  .start()
  .then(function () {
    return nodefn.call(server.listen.bind(server), rc.port)
  })
  .then(function () {
    console.log('Listening on port ' + rc.port + '...')
  }, function (err) {
    console.error(err.stack || err.message || err)
    process.exit(1)
  })
